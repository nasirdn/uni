import calculate

class Tests:
    def test_sum_two_int(self):
        '''тест/проверка кода. суммирование. при вызове выдает ошибку AssertionError: неверная сумма,
           если функция возвращает False, иначе код продалжает работу дальше.'''
        assert calculate.calculate(1, 2, "+") == 3, "Неверная сумма"

    def test_minus_neg_n(self):
        '''тест/проверка кода. вычитание отрицательных чисел. при вызове выдает ошибку AssertionError:
           вычитание отрицательных чисел, если функция возвращает False, иначе код продалжает работу дальше.'''
        assert calculate.calculate(
            1, -1, "-") == 2, "Вычитание отрицательных чисел (по сути - сложение)"

    def test_div_by_zero(self):
        '''тест/проверка кода. деление на ноль. при вызове выдает ошибку AssertionError:
           деление на ноль невозможно, если функция возвращает False, иначе код продалжает работу дальше.'''
        assert calculate.calculate(10, 0,
                         "/") == "Дeление на ноль невозможно", "Деление на ноль"

    def test_sum_two_float(self):
        '''тест/проверка кода. суммирование чисел с плавающей точкой. при вызове выдает ошибку AssertionError:
           неверная сумма чисел с плавающей точкой, если функция возвращает False, иначе код продалжает работу дальше.'''
        assert calculate.calculate(1.0, 1.0,
                         "+") == 2.0, "Неверная сумма чисел с плавающей точкой"

    def test_op2_invalid_type(self):
        '''тест/проверка кода. верность типа второго операнда. при вызове выдает ошибку AssertionError:
           ошибка во втором операнде, если функция возвращает False, иначе код продалжает работу дальше.'''
        assert calculate.calculate(
            1, "0", "+") == "Ошибка во втором операнде", "тип операнда int или float"

    def test_op1_invalid_type(self):
        '''тест/проверка кода. верность типа первого операнда. при вызове выдает ошибку AssertionError:
           ошибка в первом операнде, если функция возвращает False, иначе код продалжает работу дальше.'''
        assert calculate.calculate("1", 0, "+") == "Ошибка в первом операнде", "тип операнда int или float"