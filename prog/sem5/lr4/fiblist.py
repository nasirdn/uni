class FibonacciLst:
    """
     Класс предназначен для работы со списком чисел и фильтрации только
     тех чисел, которые являются числами Фибоначчи.
            Атрибуты:
     lst: list. Список чисел, который будет обработан для извлечения
        чисел Фибоначчи.
     fib_set: set. Множество, содержащее все числа Фибоначчи, которые
        меньше или равны максимальному значению из списка lst.
     iter_lst: iterator. Итератор, который будет использоваться для перебора
        чисел Фибоначчи из исходного списка lst.
            Методы:
     __init__(self, lst) Инициализирует объект класса FibonacciLst,
        создавая множество чисел Фибоначчи и итератор для перебора чисел из lst.
     generate_fib_up_to(self, limit) Генерирует числа Фибоначчи до указанного
        предела (limit) и добавляет их в множество fib_set.
     __iter__(self) Возвращает сам объект, что позволяет использовать его в
        циклах и других итеративных контекстах.
     __next__(self) Возвращает следующее число Фибоначчи из итератора iter_lst.
        Если итератор исчерпан, вызывается StopIteration.
    """
    def __init__(self, lst):
        """
        Инициализирует объект FibonacciLst.
        :param lst: Список чисел, которые будет обработан для извлечения
        чисел Фибоначчи.
        """
        self.lst = lst
        self.fib_set = set()
        self.generate_fib_up_to(max(lst))
        self.iter_lst = iter([x for x in lst if x in self.fib_set])

    def generate_fib_up_to(self, limit):
        """
        Генерирует числа Фибоначчи до указанного предела.
        :param limit: int Максимальное значение, до которого будут
        генерироваться числа Фибоначчи.
        """
        a, b = 0, 1
        self.fib_set.add(a)
        self.fib_set.add(b)
        while b <= limit:
            a, b = b, a + b
            self.fib_set.add(b)

    def __iter__(self):
        """
        Возвращает итератор для объекта FibonacciLst.
        :return: self : FibonacciLst Сам объект, что позволяет
        использовать его в циклах.
        """
        return self

    def __next__(self):
        """
        Возвращает следующее число Фибоначчи из итератора.
        :return: int Следующее число Фибоначчи.
        Поднимает исключение StopIteration. Вызывается, когда
        все числа Фибоначчи из lst были перебраны.
        """
        return next(self.iter_lst)

#Пример использования класса.
lst = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1]
fib_lst = FibonacciLst(lst)
print([x for x in fib_lst])